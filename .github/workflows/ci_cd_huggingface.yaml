name: CI/CD — Deploy to Hugging Face

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

jobs:
  integration:
    name: CI — Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install dagshub

      - name: Run unit tests
        run: pytest tests/

  build_and_push_docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: integration
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/customer_churn_app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/customer_churn_app:latest

  deploy:
    name: CD — Trigger Hugging Face Deployment
    runs-on: ubuntu-latest
    needs: build_and_push_docker
    steps:
      - name: Trigger Hugging Face Space to pull from Docker Hub
        run: |
          # Clone the Hugging Face Space repository
          git clone "https://NihalNiair:${{ secrets.HF_TOKEN }}@huggingface.co/spaces/NihalNiair/customer_churn_app" hf_space
          cd hf_space

          # Create a README.md file that points to your Docker Hub image.
          echo '---' > README.md
          echo 'title: Customer Churn Predictor' >> README.md
          echo 'sdk: docker' >> README.md
          # --- THIS IS THE NEW, CRUCIAL LINE ---
          echo 'docker_image: ${{ secrets.DOCKER_USERNAME }}/customer_churn_app:latest' >> README.md
          echo '---' >> README.md
          
          # Configure git
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          
          # Commit and push the README.md file
          git add README.md
          if git diff --cached --quiet; then
            echo "No changes to README.md, deployment is already up to date."
          else
            git commit -m "Update Space config to pull latest Docker image"
            git push
            echo "Deployment trigger sent to Hugging Face Spaces!"
          fi